var meatwagon=function(){"use strict";const e=/^(?<tagName>[\w-]+)?(?<ids>(?:[\.#][\w-]+)*)(?:\((?<attrs>[^\n]*?)\))?(?:\s(?<text>[\s\S]+)?)?$/,t=/(\.[\w-]+)/g,r=/(#[\w-]+)/g,n=/^\s*/,a=/^((if|while|for)\s*\([\s\S]+\)|else)$/,i=["br","img","hr","area","base","col","command","embed","input","link","meta","keygen","param","source","track","wbr"],c=t=>{const r=t.split(/\r?\n/g),a={type:"root",children:[]},c=[-1],s=[];let l=a,o=a;for(let t=0;t<r.length;t++){const a=r[t],m=a.trim();if(""===m)continue;const g=c[c.length-1],$=(u=a,n.exec(u)[0].length);let p;if("|"===m[0])p={type:"text",value:m.slice(1).trimStart()};else if(m.startsWith("//"))"-"===m[2]&&(p={type:"comment",value:m.slice(3)});else if("-"===m[0])p={type:"code",value:m.slice(1).trim(),children:[]};else{const r=e.exec(m);if(!r)throw new Error(`Line ${t+1}: malformed tag.\n${m}`);const{tagName:n,ids:a,attrs:c,text:s}=r.groups;if(p={type:"tag",tagName:n||"div",ids:a,attrs:c,hasText:Boolean(s),children:[],atomic:i.includes(n)},s){if(p.atomic)throw new Error(`Line ${t+1}: tag ${n} cannot have a text node.\n${m}`);p.children.push({type:"text",value:s.trim()})}}if($<g){if(-1===c.indexOf($))throw new Error(`Bad indentation at line ${t+1}, expected depth: ${c.join(", ")} spaces, got ${$}.\n${a}`);for(;c[c.length-1]!==$;)s.pop(),c.pop(),l=s[s.length-1];l.children.push(p)}else if($>g){if(!("children"in l))throw new Error(`Line ${t+1}: entry of type ${l.type} cannot have children.\n${a}`);if("tag"===l.type){if(i.includes(l.tagName))throw new Error(`Line ${t+1}: tag ${l.tagName} cannot have children.\n${a}`);if(l.hasText)throw new Error(`Line ${t+1}: tag ${l.tagName} has a text node and cannot have children.\n${a}`)}h=o,d=$,c.push(d),s.push(h),l=h,l.children.push(p)}else l.children.push(p);o=p}var h,d,u;return a},s=/'/g,l=e=>e.replace(s,"\\`");let o;const h=e=>{let t="";return o&&!e?t="`;":!o&&e&&(t="html+=`"),o=e,t},d=e=>{if(e instanceof Array)return e.map(d).join("");let n;switch(e.type){case"comment":return`${h(!0)}\x3c!--${l(e.value)}--\x3e`;case"code":n=h(!1)+e.value;const i=a.test(e.value);return i&&(n+="{"),e.children?.length&&(n+=d(e.children)),i&&(n+=`${h(!1)}}`),o=!1,n;case"text":return`${h(!0)}${l(e.value)}`;case"tag":const c=e.atomic;let s=e.attrs?" "+e.attrs:"";return e.ids&&(s+=(e=>{const n=r.exec(e)?.[0],a=e.match(t);let i="";if(n&&(i+=` id="${n.slice(1)}" `),a?.length){i+=' class="';for(const e of a)i+=e.slice(1)+" ";i=i.slice(0,-1)+'" '}return i.slice(0,-1)})(e.ids)),n=`${h(!0)}<${e.tagName}${l(s)}${c?"/":""}>`,e.children?.length&&(n+=d(e.children)),c||(n+=`${h(!0)}</${e.tagName}>`),o=!0,n}},u=e=>{try{return new Function("state",e)}catch(t){throw console.error(e),new Error(`Malformed JS code: ${t.message}`)}},m=e=>{let t="let html = '';";return o=!1,t+=d(e.children),o&&(t+="`;"),t+="return html;",t};return{render(e,t={}){const r=c(e),n=m(r);return u(n)(t)},renderer:e=>u(m(c(e)))}}();
