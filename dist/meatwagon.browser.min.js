var meatwagon=function(){"use strict";const e=/^(?<tagName>[\w-]+)?(?<ids>(?:[\.#][\w-]+)*)(?:\((?<attrs>[^\n]*?)\))?(?:\s(?<text>[\s\S]+)?|(?<dot>\.))?$/,t=/(\.[\w-]+)/g,n=/(#[\w-]+)/g,r=/^\s*/,a=/^((if|while|for)\s*\([\s\S]+\)|else)$/,i=["br","img","hr","area","base","col","command","embed","input","link","meta","keygen","param","source","track","wbr"],l=t=>{const n=t.split(/\r?\n/g),a={type:"root",children:[]},l=[-1],c=[];let s,o,h=a,d=a,u=null;for(let t=0;t<n.length;t++){const a=n[t],$=a.trim();if(""===$){s&&s.children.push({type:"text",value:"\n"});continue}const f=l[l.length-1],w=(g=a,r.exec(g)[0].length);if(s){if(o<w){null===u&&(u=w),s.children.push({type:"text",value:a.slice(u)+"\n"});continue}s=!1,u=null}let x;if("|"===$[0])x={type:"text",value:$.slice(1).trimStart()||" "};else if($.startsWith("//"))"-"===$[2]&&(x={type:"comment",value:$.slice(3)});else if("-"===$[0])x={type:"code",value:$.slice(1).trim(),children:[]};else{const n=e.exec($);if(!n)throw new Error(`Line ${t+1}: malformed tag.\n${$}`);const{tagName:r,ids:a,attrs:l,text:c,dot:h}=n.groups;if(x={type:"tag",tagName:r||"div",ids:a,attrs:l,hasText:Boolean(c),children:[],atomic:i.includes(r)},h)s=x,o=w,x.children.push({type:"text",value:"\n"});else if(c){if(x.atomic)throw new Error(`Line ${t+1}: tag ${r} cannot have a text node.\n${$}`);x.children.push({type:"text",value:c.trim()})}}if(w<f){if(-1===l.indexOf(w))throw new Error(`Bad indentation at line ${t+1}, expected depth: ${l.join(", ")} spaces, got ${w}.\n${a}`);for(;l[l.length-1]!==w;)c.pop(),l.pop(),h=c[c.length-1];h.children.push(x)}else if(w>f){if(!("children"in h))throw new Error(`Line ${t+1}: entry of type ${h.type} cannot have children.\n${a}`);if("tag"===h.type){if(i.includes(h.tagName))throw new Error(`Line ${t+1}: tag ${h.tagName} cannot have children.\n${a}`);if(h.hasText)throw new Error(`Line ${t+1}: tag ${h.tagName} has a text node and cannot have children.\n${a}`)}m=d,p=w,l.push(p),c.push(m),h=m,h.children.push(x)}else h.children.push(x);d=x}var m,p,g;return a},c=/`/g,s=e=>e.replace(c,"\\`");let o;const h=e=>{let t="";return o&&!e?t="`;":!o&&e&&(t="html+=`"),o=e,t},d=(e,r=!1)=>{if(e instanceof Array)return e.map(d).join("");let i;switch(e.type){case"comment":return`${h(!0)}\x3c!--${s(e.value)}--\x3e`;case"code":i=h(!1)+e.value;const r=a.test(e.value);return r&&(i+="{"),e.children?.length&&(i+=d(e.children)),r&&(i+=`${h(!1)}}`),o=!1,i;case"text":return`${h(!0)}${s(e.value)}`;case"tag":const l=e.atomic;let c=e.attrs?" "+e.attrs:"";return e.ids&&(c+=(e=>{const r=n.exec(e)?.[0],a=e.match(t);let i="";if(r&&(i+=` id="${r.slice(1)}" `),a?.length){i+=' class="';for(const e of a)i+=e.slice(1)+" ";i=i.slice(0,-1)+'" '}return i.slice(0,-1)})(e.ids)),i=`${h(!0)}<${e.tagName}${s(c)}${l?"/":""}>`,e.children?.length&&(i+=d(e.children)),l||(i+=`${h(!0)}</${e.tagName}>`),o=!0,i}},u=e=>{try{return new Function("state",e)}catch(t){throw console.error(e),new Error(`Malformed JS code: ${t.message}`)}},m=(e,t=!1)=>{let n="let html = '';";return o=!1,n+=d(e.children,t),o&&(n+="`;"),n+="return html;",n};return{render(e,t={},n=!1){const r=l(e),a=m(r,!1);return u(a)(t)},renderer:(e,t=!1)=>u(m(l(e),!1))}}();
//# sourceMappingURL=meatwagon.browser.min.js.map
